Sub pareDown()
'
'   This macro compares a new pricelist to the old pricelist of the same company.  If the old pricelist has
'   less than half the amount of parts in it, the new pricelist is pared down to match the old.  This determination can be done by human eyes, however, and is not done in the code.
'   Before activation of this macro, the old parts list should be quickly checked for size versus the size of the new parts list.
'

'Data Instantiation

'This variable holds the part number from the new pricelist.
Dim NewPricePartNum As String
'This boolean variable is set to true if a part number is found in the old pricing data.
Dim ExistsInOld As Boolean
'This integer variable is used to track how many rows are deleted from the new price list so the value can be shown to the user
Dim DeleteCount As Integer
DeleteCount = 0
'These variables hold the tables used in this macro
Dim priceTable As ListObject
Dim oldPriceTable As ListObject
Sheets("NewPrices").Select
Set priceTable = ActiveSheet.ListObjects("PriceTable")
Sheets("OldPrices").Select
Set oldPriceTable = ActiveSheet.ListObjects("OldPriceTable")
'This variable holds a found cell
Dim fCell As Range
Dim SearchArea As Range
Dim TableRange As Range
'Create a range to check for prices
Sheets("NewPrices").Select
Set SearchArea = ActiveSheet.ListObjects("PriceTable").ListColumns(6).Range
'Create variable to hold position of line to be pasted on
Dim j As Integer
j = 2
Dim k As Integer
k = 2


'Create variable to hold number of times the count was lost
Dim CountNotFound As Integer
CountNotFound = 0

'Process
Sheets("OldPrices").Select
For i = 2 To oldPriceTable.Range.Rows.Count
    NewPricePartNum = Cells(i, 6).Value
    Sheets("NewPrices").Select
    Set fCell = SearchArea.Cells.Find(NewPricePartNum)
    If Not fCell Is Nothing Then
        ActiveSheet.Rows(fCell.Row).Copy
        Sheets("ParedPrices").Select
        Cells(j, 1).Select
        j = j + 1
        Selection.PasteSpecial xlPasteAll
    Else
        CountNotFound = CountNotFound + 1
        Sheets("ParedPrices").Select
        Cells(k, 11).Value = NewPricePartNum
        k = k + 1
    End If
    Sheets("OldPrices").Select
Next i



'Refresh the used range and then select it to re-size the table
Sheets("ParedPrices").Select
Sheets("ParedPrices").UsedRange
Worksheets("ParedPrices").UsedRange.Select

'Extend the table
ActiveSheet.ListObjects("ParedPriceTable").Resize Range("A1:Selection.End")

MsgBox CountNotFound & " parts were not found in the new price list"


End Sub
